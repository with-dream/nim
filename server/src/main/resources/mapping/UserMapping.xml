<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.UserMapper">
    <insert id="register" parameterType="com.example.server.entity.UserEntity">
        insert into user_info(name, nickName, pwd, uuid, registerTime) values (#{name}, #{nickName}, #{pwd}, #{uuid}, #{registerTime});
    </insert>

    <select id="login" resultType="com.example.server.entity.UserResEntity"
            parameterType="com.example.server.entity.UserEntity">
        SELECT * FROM user_info where name=#{name} and pwd=#{pwd};
    </select>

    <select id="checkUser" resultType="int">
        SELECT count(*) FROM user_info where uuid = #{uuid};
    </select>

    <select id="userInfo" resultType="com.example.server.entity.UserInfoEntity">
        SELECT * FROM user_info where uuid = #{uuid};
    </select>

    <select id="friendList" resultType="com.example.server.entity.FriendInfoEntity" parameterType="java.lang.String">
        SELECT * FROM friend_info where userId = #{uuid};
    </select>

    <select id="isFriend" resultType="boolean" parameterType="com.example.server.entity.FriendInfoEntity">
        select isFriend from friend_info where userId = #{userId} and friendId = #{friendId};
    </select>

    <insert id="addFriendReq" parameterType="com.example.server.entity.RequestEntity">
        insert into friend_req_info(userId, friendId, status, folder, targetType, extra, source)
        values(#{userId}, #{friendId}, #{status}, #{folder}, #{targetType}, #{extra}, #{source});
    </insert>

    <select id="friendReqList" resultType="com.example.server.entity.RequestEntity">
        select * from friend_req_info where userId = #{userId} or friendId = #{userId};
    </select>

    <insert id="addFriendAffirm" parameterType="com.example.server.entity.FriendInfoEntity">
        insert into friend_info(userId, friendId, isFriend, remark, stick, insertTime)
        values(#{userId}, #{friendId}, #{isFriend}, #{remark}, #{stick}, #{insertTime});
    </insert>

    <update id="delFriend" parameterType="com.example.server.entity.FriendInfoEntity">
        update friend_info set isFriend=false and insertTime=#{insertTime} where user_id = #{userId} and friend_id = #{friendId};
    </update>

    <insert id="blockFriend" parameterType="com.example.server.entity.FriendInfoEntity">
        insert into block_info(userId, friendId) value(#{userId}, #{friendId});
    </insert>

    <delete id="delBlockFriend" parameterType="com.example.server.entity.FriendInfoEntity">
        delete from block_info where userId=#{userId} and friendId=#{friendId}
    </delete>

    <select id="isBlock" resultType="int" parameterType="com.example.server.entity.FriendInfoEntity">
        select count(*) from block_info where userId = #{userId} and friendId = #{friendId};
    </select>

    <select id="isBlockAny" resultType="int" parameterType="com.example.server.entity.FriendInfoEntity">
        select count(*) from block_info where userId = #{userId} and friendId = #{friendId} or userId = #{friendId} and friendId = #{userId} ;
    </select>

    <insert id="stickFriend" parameterType="com.example.server.entity.StickEntity">
        insert into stick_info(userId, targetId, targetType) values(#{userId}, #{targetId}, #{targetType});
    </insert>

    <select id="stickFriendList" resultType="com.example.server.entity.StickEntity">
        select * from stick_info where userId = #{userId} and friendId = #{friendId};
    </select>

    <delete id="delStickFriend" parameterType="com.example.server.entity.StickEntity">
        delete from stick_info where userId=#{userId} and targetId=#{targetId} and targetType=#{targetType};
    </delete>

    <insert id="addFriendFolder" parameterType="com.example.server.entity.FriendFolderEntity">
        insert into friend_folder(uuid, name, index) values (#{uuid}, #{name}, #{index});
    </insert>

    <update id="updateFriendFolder" parameterType="list">
        <foreach collection="folderList" item="folder">
            update friend_folder set name=#{folder.name} and index=#{folder.index} where uuid=#{folder.uuid} and
            id=#{folder.id};
        </foreach>
    </update>

    <delete id="delFriendFolder">
        delete from friend_folder where uuid=#{uuid} and id=#{id}
    </delete>

    <select id="friendFolderList" resultType="com.example.server.entity.FriendFolderEntity">
        select * from friend_folder where uuid = #{uuid};
    </select>

    <!-- xia -->
    <select id="getGroupMembers" resultType="com.example.server.entity.GroupMemberEntity"
            parameterType="java.lang.String">
        SELECT * FROM group_member where groupId= #{groupId};
    </select>

    <insert id="addGroupMember" parameterType="com.example.server.entity.GroupMemberEntity">
        insert into group_member(uuid, groupId, role, level, insertTime, lastTime) values(#{uuid}, #{groupId}, #{role}, #{level}, #{insertTime}, #{lastTime});
    </insert>

    <delete id="delGroupMember" parameterType="com.example.server.entity.GroupMemberEntity">
        delete from group_member where uuid=#{uuid} and groupId=#{groupId};
    </delete>

    <select id="checkGroupRole" resultType="int" parameterType="com.example.server.entity.GroupMemberEntity">
        SELECT role FROM group_member where group_id = #{groupId} and uuid=#{uuid};
    </select>

    <select id="getGroupInfo" resultType="com.example.server.entity.GroupInfoEntity" parameterType="java.lang.String">
        SELECT * FROM group_info where group_id = #{groupId};
    </select>

    <insert id="createGroup" parameterType="com.example.server.entity.GroupInfoEntity">
        insert into group_info(name, uuid, groupId, memberCount) values(#{name}, #{uuid}, #{groupId}, #{memberCount});
    </insert>

    <delete id="delGroup" parameterType="com.example.server.entity.GroupMemberEntity">
        delete from group_info where groupId=#{groupId};
    </delete>

    <select id="getAllGroup" resultType="com.example.server.entity.GroupInfoEntity" parameterType="java.lang.String">
        SELECT * FROM group_info where uuid = #{uuid};
    </select>
</mapper>


